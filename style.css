/* Terminal styling:
* https://css-tricks.com/old-timey-terminal-styling/
*/

* {
  margin: 0px;
  box-sizing: border-box;
}

:root {
  --bg: black;
  --bg-image: radial-gradient(
    rgba(150, 127, 0, 0.3), black 120%
  );
  --border: #fbbf24;
  --text: #fbbf24;
  --glow: 0 0 5px #bd8f1d;
  --temp-outline: 1px dashed white;
}

/* appearance */
body {
  background-color: var(--bg);
  background-image: var(--bg-image);
  color: var(--text);
  font: 1.0rem Inconsolata, monospace; 
  text-shadow: var(--glow);
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: repeating-linear-gradient(
      0deg,
      rgba(0, 0, 0, 0.15),
      rgba(0, 0, 0, 0.15) 1px,
      transparent 1px,
      transparent 2px
    );
    pointer-events: none;  
  }
}

/* dialogs don't inherit a lot of things*/
dialog {
  background-color: var(--bg);
  /* they don't inherit background image either, which is the glow in this case */
  /* Note that the radial gradient will have to join seamlessly onto the */
  /* main full-screen-size one. */
  /* Having your modal be centred in the first place makes this relatively
  easy: you just scale your modal background to be the same as the original
  winhow and center it too.
  If you had anything more complicated you may need to calculate where exactly
  the modal ended up and use that to reposition the background image.
  Or, if things were a complete disaster: I'd just invert the colour scheme
  of the popup and give up on the radial background entirely. */
  background-image: var(--bg-image);
  background-size: 100vw 100vh;
  background-position: center;
  color: var(--text);
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      0deg,
      rgba(0, 0, 0, 0.15),
      rgba(0, 0, 0, 0.15) 1px,
      transparent 1px,
      transparent 2px
    );
    pointer-events: none; 
  }
}

#add-book-dialog {
  position: absolute;
  
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

input {
  background-color: transparent;
  border: none;
  color: var(--text);
  text-shadow: var(--glow);
}

input[type="checkbox"] {
  appearance: none;
  border: 2px solid var(--text);
  /* this glow doesn't work right */
  -webkit-box-shadow: 0px 0px 5px 5px var(--glow); 
  box-shadow: 0px 0px 5px 5px var(--glow);
  position: relative;
  width: 1.50rem;
  height: 1.50rem;
  top: 1px;
  cursor: pointer;
}

/* input[type="checkbox"]::after {
  position: absolute;
  border: 1px solid red;
  width: 1.4rem;
  height: 1.4rem;
} */

input[type=checkbox]::before {
  content: '✓';
  position: absolute;
  font-size: 1.2rem;
  right: 1px;
  visibility: hidden;
}

input[type=checkbox]:checked::before {
  /* content: '✓'; */
  visibility: visible;
}

button {
  background-color: transparent;
  border: 2px solid var(--border);
  border-radius: 2px;
  color: var(--text);
  cursor: pointer;
  text-shadow: var(--glow);
}

/* top-level layout */
body {
  height: 100vh;
  display: grid;
  grid-template-areas: 
    "header header"
    "sidebar main";
  grid-template-columns: min-content auto;
  grid-template-rows: min-content auto;
}

.header {
  grid-area: header;
}

.sidebar {
  grid-area: sidebar;
}

.main {
  grid-area: main;
}

.brace {
  border: var(--temp-outline);
  display: flex;
  align-items: center;
  justify-items: center;
  justify-content: center;
  padding: 10px;
}

.header {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  border-bottom: 2px solid var(--border);
}

.sidebar {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  justify-content: start;
  border-right: 2px solid var(--border);
  gap: 10px;
}

.sidebar > h3 {
  text-align: center;
  padding: 20px 10px 10px 10px;
}

.sidebar > button {
  padding: 10px 20px;
  margin: 0px 20px;
}

.main {
  display: grid;
  justify-content: center;
  grid-template-rows: min-content auto;
  padding: 20px;
  gap: 20px;
}

.form-add-book {
  display: grid;
  grid-template-columns: 90px min-content 300px min-content;
  grid-template-rows: 2rem;
  grid-auto-rows: 2rem;
  align-items: center;
  justify-self: center;
}

/* this is the BRACE positioning */
/* It seems pretty temperamental and a better way would be nice */
.form-add-book > div {
  font-size: 180%;
  margin-top: -5px;
  /* height: 2.6rem; */
}

.form-add-book > input[type=checkbox] {
  grid-column: 2 / -1;
  margin-left: 5px;
  justify-self: self-start;
}

.form-add-book > button {
  grid-column: 1 / -1;
  justify-self: center;
  width: 100px;
}

.form-add-book h3 {
  grid-column: 1;
}

/* need to rename this */
.form-add-book #dialog-close {
  margin-bottom: 10px;
  grid-column: 2 / -1;
  justify-self: end;
}

.section-table > h3 {
  margin-bottom: 15px;
}

.section-table th,
.section-table td {
  padding-bottom: 2px;
  padding-left: 0.5em;
  padding-right: 0.5em;
  text-align: center;
  vertical-align: center;
}

.section-table td input[type=checkbox] {
  margin-bottom: -4px;
}

/* https://stackoverflow.com/questions/1205457/how-to-design-a-css-for-a-centered-floating-confirm-dialog */
/* .dialog-wrapper {
  top: 50%;
  left: 50%;
  position: absolute;
} */

.h160 {
  width: 160px;
}

.v100 {
  height: 100px;
}